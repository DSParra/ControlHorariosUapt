/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package redisenio;

import Clases.Archivo;
import Clases.ConectarBase;
import Clases.ConsultasObjetos;
import Clases.Valida;
import Objetos.Licenciatura;
import Objetos.Materia;
import Objetos.PlanEstudios;
import cjb.ci.CtrlInterfaz;
import cjb.ci.Mensaje;
import cjb.ci.Validaciones;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MoisesVidalHernandez
 */
public class VtnMaterias extends javax.swing.JFrame {

    int id = 0;
    private Boolean edicion = true;
    private DefaultTableModel modelo;
    private ArrayList<Object> plans = new ArrayList<>();
    private ArrayList<Object> planes1 = new ArrayList<>();
    private ArrayList<Object> lics = new ArrayList<>();
    private ArrayList<Object> materia = new ArrayList<>();
    ArrayList materias = new ArrayList();

    /**
     * Creates new form VtnDocentes
     */
    public VtnMaterias() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/Iconos2/SCHR.png")).getImage());
        this.setExtendedState(MAXIMIZED_BOTH);
        tablaMaterias.getColumnModel().getColumn(0).setPreferredWidth(10);
        tablaMaterias.getColumnModel().getColumn(1).setPreferredWidth(200);
        tablaMaterias.getColumnModel().getColumn(2).setPreferredWidth(100);
        tablaMaterias.getColumnModel().getColumn(3).setPreferredWidth(20);
        tablaMaterias.getColumnModel().getColumn(4).setPreferredWidth(3);
        tablaMaterias.getColumnModel().getColumn(5).setPreferredWidth(3);
        tablaMaterias.getColumnModel().getColumn(6).setPreferredWidth(10);
        tablaMaterias.getColumnModel().getColumn(7).setPreferredWidth(20);
        tablaMaterias.getColumnModel().getColumn(8).setPreferredWidth(20);
        tablaMaterias.getColumnModel().getColumn(0).setResizable(false);
        tablaMaterias.getColumnModel().getColumn(1).setResizable(false);
        tablaMaterias.getColumnModel().getColumn(2).setResizable(false);
        tablaMaterias.getColumnModel().getColumn(3).setResizable(false);
        tablaMaterias.getColumnModel().getColumn(4).setResizable(false);
        tablaMaterias.getColumnModel().getColumn(5).setResizable(false);
        tablaMaterias.getColumnModel().getColumn(6).setResizable(false);
        tablaMaterias.getColumnModel().getColumn(7).setResizable(false);
        tablaMaterias.getColumnModel().getColumn(8).setResizable(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelCaptura = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        labelnombre = new javax.swing.JLabel();
        labelnombre1 = new javax.swing.JLabel();
        labelnombre2 = new javax.swing.JLabel();
        labelnombre3 = new javax.swing.JLabel();
        labelnombre4 = new javax.swing.JLabel();
        labelnombre5 = new javax.swing.JLabel();
        labelnombre6 = new javax.swing.JLabel();
        txtMatricula = new javax.swing.JTextField();
        txtNombres = new javax.swing.JTextField();
        txtHoras = new javax.swing.JTextField();
        txtCreditos = new javax.swing.JTextField();
        btnNuevo = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        comboLicenciatura = new javax.swing.JComboBox<>();
        comboPlanEstudios = new javax.swing.JComboBox<>();
        comboSemestre = new javax.swing.JComboBox<>();
        comboNucleo = new javax.swing.JComboBox<>();
        labelnombre9 = new javax.swing.JLabel();
        comboTipo = new javax.swing.JComboBox<>();
        labelnombre11 = new javax.swing.JLabel();
        panelConsulta1 = new javax.swing.JPanel();
        panelFiltros = new javax.swing.JPanel();
        panelBusqeuda = new javax.swing.JPanel();
        labelnombre8 = new javax.swing.JLabel();
        labelnombre7 = new javax.swing.JLabel();
        txtIdBusqueda = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        labelnombre12 = new javax.swing.JLabel();
        comboLicBusqueda = new javax.swing.JComboBox<>();
        comboSemestreBusqueda = new javax.swing.JComboBox<>();
        comboPlanBusqueda = new javax.swing.JComboBox<>();
        panelTabla = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaMaterias = new javax.swing.JTable();
        panelEXportacion = new javax.swing.JPanel();
        labelnombre10 = new javax.swing.JLabel();
        txtNombreArchivo1 = new javax.swing.JTextField();
        btnExportar1 = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        panelCaptura.setBackground(new java.awt.Color(255, 255, 255));
        panelCaptura.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(0, 51, 0));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        labelnombre.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelnombre.setForeground(new java.awt.Color(255, 255, 255));
        labelnombre.setText("CLAVE");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(labelnombre, gridBagConstraints);

        labelnombre1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelnombre1.setForeground(new java.awt.Color(255, 255, 255));
        labelnombre1.setText("LICENCIATURA");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(labelnombre1, gridBagConstraints);

        labelnombre2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelnombre2.setForeground(new java.awt.Color(255, 255, 255));
        labelnombre2.setText("PLAN ESTUDIOS");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(labelnombre2, gridBagConstraints);

        labelnombre3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelnombre3.setForeground(new java.awt.Color(255, 255, 255));
        labelnombre3.setText("NOMBRE");
        labelnombre3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                labelnombre3FocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(labelnombre3, gridBagConstraints);

        labelnombre4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelnombre4.setForeground(new java.awt.Color(255, 255, 255));
        labelnombre4.setText("HORAS");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(labelnombre4, gridBagConstraints);

        labelnombre5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelnombre5.setForeground(new java.awt.Color(255, 255, 255));
        labelnombre5.setText("CREDITOS");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(labelnombre5, gridBagConstraints);

        labelnombre6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelnombre6.setForeground(new java.awt.Color(255, 255, 255));
        labelnombre6.setText("SEMESTRE");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(labelnombre6, gridBagConstraints);

        txtMatricula.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMatriculaFocusLost(evt);
            }
        });
        txtMatricula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMatriculaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMatriculaKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(txtMatricula, gridBagConstraints);

        txtNombres.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombresFocusLost(evt);
            }
        });
        txtNombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombresKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(txtNombres, gridBagConstraints);

        txtHoras.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHorasKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHorasKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(txtHoras, gridBagConstraints);

        txtCreditos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCreditosKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCreditosKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(txtCreditos, gridBagConstraints);

        btnNuevo.setBackground(new java.awt.Color(102, 102, 0));
        btnNuevo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnNuevo.setForeground(new java.awt.Color(255, 255, 255));
        btnNuevo.setText("NUEVO");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(btnNuevo, gridBagConstraints);

        btnEliminar.setBackground(new java.awt.Color(102, 102, 0));
        btnEliminar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 19;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(btnEliminar, gridBagConstraints);

        btnModificar.setBackground(new java.awt.Color(102, 102, 0));
        btnModificar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar.setText("MODIFICAR");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(btnModificar, gridBagConstraints);

        btnCancelar.setBackground(new java.awt.Color(102, 102, 0));
        btnCancelar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 21;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(btnCancelar, gridBagConstraints);

        comboLicenciatura.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboLicenciaturaItemStateChanged(evt);
            }
        });
        comboLicenciatura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboLicenciaturaKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(comboLicenciatura, gridBagConstraints);

        comboPlanEstudios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboPlanEstudiosKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(comboPlanEstudios, gridBagConstraints);

        comboSemestre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        comboSemestre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboSemestreKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(comboSemestre, gridBagConstraints);

        comboNucleo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BASICO", "SUSTANTIVO", "INTEGRAL" }));
        comboNucleo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboNucleoKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(comboNucleo, gridBagConstraints);

        labelnombre9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelnombre9.setForeground(new java.awt.Color(255, 255, 255));
        labelnombre9.setText("NUCLEO");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(labelnombre9, gridBagConstraints);

        comboTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "OBLIGATORIA", "OPTATIVA" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(comboTipo, gridBagConstraints);

        labelnombre11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelnombre11.setForeground(new java.awt.Color(255, 255, 255));
        labelnombre11.setText("TIPO");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(labelnombre11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelCaptura.add(jPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(panelCaptura, gridBagConstraints);

        panelConsulta1.setLayout(new java.awt.GridBagLayout());

        panelFiltros.setBackground(new java.awt.Color(255, 204, 204));
        panelFiltros.setLayout(new java.awt.GridBagLayout());

        panelBusqeuda.setBackground(new java.awt.Color(255, 255, 255));
        panelBusqeuda.setLayout(new java.awt.GridBagLayout());

        labelnombre8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelnombre8.setText("GESTION MATERIAS");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelBusqeuda.add(labelnombre8, gridBagConstraints);

        labelnombre7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelnombre7.setText("PARA BUSCAR UNA MATERIA ESCRIBA SU NOMBRE");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelBusqeuda.add(labelnombre7, gridBagConstraints);

        txtIdBusqueda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIdBusquedaFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelBusqeuda.add(txtIdBusqueda, gridBagConstraints);

        btnBuscar.setBackground(new java.awt.Color(102, 102, 0));
        btnBuscar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelBusqeuda.add(btnBuscar, gridBagConstraints);

        labelnombre12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelnombre12.setText("O BIEN SELECCIONE UNA LICENCIATURA, SEMESTRE Y UN PLAN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelBusqeuda.add(labelnombre12, gridBagConstraints);

        comboLicBusqueda.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboLicBusquedaItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        panelBusqeuda.add(comboLicBusqueda, gridBagConstraints);

        comboSemestreBusqueda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TODOS", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        comboSemestreBusqueda.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboSemestreBusquedaItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        panelBusqeuda.add(comboSemestreBusqueda, gridBagConstraints);

        comboPlanBusqueda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TODOS" }));
        comboPlanBusqueda.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboPlanBusquedaItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        panelBusqeuda.add(comboPlanBusqueda, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        panelFiltros.add(panelBusqeuda, gridBagConstraints);

        panelTabla.setLayout(new java.awt.GridBagLayout());

        tablaMaterias.setBackground(new java.awt.Color(255, 255, 204));
        tablaMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "CLAVE", "LICENCIATURA", "PLAN ESTUDIOS", "NOMBRES", "HORAS", "CREDITOS", "SEMESTRE", "NUCLEO", "TIPO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaMaterias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMateriasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaMaterias);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelTabla.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelFiltros.add(panelTabla, gridBagConstraints);

        panelEXportacion.setBackground(new java.awt.Color(0, 51, 0));
        panelEXportacion.setLayout(new java.awt.GridBagLayout());

        labelnombre10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelnombre10.setForeground(new java.awt.Color(255, 255, 255));
        labelnombre10.setText("SI DESEA EXPORTAR ARCHIVO EXCEL, ESCRIBA UN NOMBRE");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelEXportacion.add(labelnombre10, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelEXportacion.add(txtNombreArchivo1, gridBagConstraints);

        btnExportar1.setBackground(new java.awt.Color(102, 102, 0));
        btnExportar1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnExportar1.setForeground(new java.awt.Color(255, 255, 255));
        btnExportar1.setText("EXPORTAR");
        btnExportar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportar1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelEXportacion.add(btnExportar1, gridBagConstraints);

        btnRegresar.setBackground(new java.awt.Color(102, 102, 0));
        btnRegresar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnRegresar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos2/flecha(2).png"))); // NOI18N
        btnRegresar.setText("REGRESAR AL MENU");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelEXportacion.add(btnRegresar, gridBagConstraints);

        btnCerrar.setBackground(new java.awt.Color(153, 0, 0));
        btnCerrar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCerrar.setForeground(new java.awt.Color(255, 255, 255));
        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos2/flecha(3).png"))); // NOI18N
        btnCerrar.setText("SALIR");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelEXportacion.add(btnCerrar, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        panelFiltros.add(panelEXportacion, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelConsulta1.add(panelFiltros, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(panelConsulta1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        this.setVisible(false);
        new VtnAdministrador().setVisible(true);
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        this.setVisible(false);
        new Login().setVisible(true);
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        if (!edicion)
        {
            edicion();
            btnNuevo.setText("Aceptar");
            CtrlInterfaz.limpia(txtMatricula, txtNombres, txtHoras, txtCreditos);
            CtrlInterfaz.habilita(true, txtMatricula, comboLicenciatura, comboPlanEstudios, txtNombres, txtHoras, txtCreditos, comboSemestre, comboNucleo, comboTipo, btnCancelar);
            CtrlInterfaz.habilita(false, btnModificar, btnEliminar, btnExportar1);
            CtrlInterfaz.selecciona(txtMatricula);
        } else
        {
            Materia mat = new Materia(txtMatricula.getText(), txtNombres.getText(), Integer.parseInt(txtHoras.getText()), Integer.parseInt(txtCreditos.getText()), Integer.parseInt(comboSemestre.getSelectedItem().toString()),
                    comboNucleo.getSelectedItem().toString(), comboTipo.getSelectedItem().toString(), buscaLic(null, comboLicenciatura.getSelectedItem().toString()), buscaPlan(null, comboPlanEstudios.getSelectedItem().toString()));
            String mensaje = Controlador.ControladorMaterias.insertaMateria(mat);
            if (mensaje.equals("operacion exitosa"))
            {
                btnNuevo.setText("Nuevo");
                CtrlInterfaz.habilita(false, txtMatricula, comboLicenciatura, comboPlanEstudios, txtNombres, txtHoras,
                        txtCreditos, comboSemestre, comboNucleo, comboTipo, btnCancelar);
                CtrlInterfaz.habilita(true, btnModificar, btnEliminar, btnExportar1);
                CtrlInterfaz.limpia(txtMatricula, txtCreditos, txtHoras, txtNombres);
                importarBD();
                actualizarTabla(1);
                comboLicBusqueda.setSelectedIndex(0);
                edicion();
            } else
            {
                JOptionPane.showMessageDialog(rootPane, mensaje);
            }
        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if (txtMatricula.getText().compareTo("") == 0)
        {
            Mensaje.error(this, "NO HA SELECCIONADO NINGUN REGISTRO");
        } else
        {
            if (!edicion)
            {
                edicion();
                btnModificar.setText("Aceptar");
                CtrlInterfaz.habilita(true, comboLicenciatura, comboPlanEstudios, txtNombres, txtHoras, txtCreditos,
                        comboSemestre, comboNucleo, comboTipo, btnCancelar);
                CtrlInterfaz.habilita(false, btnNuevo, btnEliminar, btnExportar1);

            } else
            {
                Materia materia = new Materia(txtMatricula.getText(), txtNombres.getText(), Integer.parseInt(txtHoras.getText()), Integer.parseInt(txtCreditos.getText()), Integer.parseInt(comboSemestre.getSelectedItem().toString()), comboNucleo.getSelectedItem().toString(), comboTipo.getSelectedItem().toString(), buscaLic(null, comboLicenciatura.getSelectedItem().toString()), buscaPlan(null, comboPlanEstudios.getSelectedItem().toString()));
                String mensaje = Controlador.ControladorMaterias.modifcaMateria(materia, (String) tablaMaterias.getValueAt(tablaMaterias.getSelectedRow(), 0));
                if (mensaje.equals("operacion exitosa"))
                {
                    btnModificar.setText("Modificar");
                    CtrlInterfaz.habilita(false, txtMatricula, comboLicenciatura, comboPlanEstudios, txtNombres, txtHoras, txtCreditos, comboSemestre, comboNucleo, comboTipo, btnCancelar);
                    CtrlInterfaz.habilita(true, btnNuevo, btnEliminar, btnExportar1);
                    CtrlInterfaz.limpia(txtMatricula, txtCreditos, txtHoras, txtNombres);
                    importarBD();
                    actualizarTabla(1);
                    comboLicBusqueda.setSelectedIndex(0);
                    edicion();
                } else
                {
                    JOptionPane.showMessageDialog(rootPane, mensaje);
                }
            }
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (Mensaje.pregunta(this, "¿En realidad quiere eliminar el periodo " + txtMatricula.getText() + "?") == 0)
        {
            String mensaje = Controlador.ControladorMaterias.eliminaMateria(txtMatricula.getText());
            if (mensaje.endsWith("operacion exitosa"))
            {
                importarBD();
                actualizarTabla(1);
                comboLicBusqueda.setSelectedIndex(0);
            } else
            {
                JOptionPane.showMessageDialog(rootPane, mensaje);
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnExportar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportar1ActionPerformed
        if (txtNombreArchivo1.getText() != null)
        {
            String mensaje = Archivo.Exportar(tablaMaterias, txtNombreArchivo1.getText());
            if (mensaje.equals("Error en la Exportacion"))
            {
                Mensaje.error(this, mensaje);
            } else
            {
                Mensaje.exito(this, mensaje);
            }
        } else
        {
            Mensaje.error(this, "Escriba el nombre del archivo");
        }
    }//GEN-LAST:event_btnExportar1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        cancelar();
        importarBD();
        actualizarTabla(1);
        llenaComboLic();
        llenaComboPlanes();
    }//GEN-LAST:event_formWindowOpened

    private void tablaMateriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMateriasMouseClicked
        txtMatricula.setText((String) modelo.getValueAt(tablaMaterias.getSelectedRow(), 0));
        txtNombres.setText((String) modelo.getValueAt(tablaMaterias.getSelectedRow(), 1));
        comboLicenciatura.setSelectedIndex(buscarCombo((String) modelo.getValueAt(tablaMaterias.getSelectedRow(), 2)));
        comboPlanEstudios.setSelectedIndex((buscarCombo((String) modelo.getValueAt(tablaMaterias.getSelectedRow(), 3), comboPlanEstudios)));
        txtHoras.setText((String) modelo.getValueAt(tablaMaterias.getSelectedRow(), 4).toString());
        txtCreditos.setText((String) modelo.getValueAt(tablaMaterias.getSelectedRow(), 5).toString());
        comboSemestre.setSelectedIndex(buscarCombo((String) modelo.getValueAt(tablaMaterias.getSelectedRow(), 6).toString(), comboSemestre));
        comboNucleo.setSelectedIndex(buscarCombo((String) modelo.getValueAt(tablaMaterias.getSelectedRow(), 7), comboNucleo));
        comboTipo.setSelectedIndex(buscarCombo((String) modelo.getValueAt(tablaMaterias.getSelectedRow(), 8), comboTipo));
    }//GEN-LAST:event_tablaMateriasMouseClicked

    private void comboLicenciaturaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboLicenciaturaItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED)
        {
            llenaComboPlanes();
        }
    }//GEN-LAST:event_comboLicenciaturaItemStateChanged

    private void txtMatriculaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatriculaKeyTyped
        Valida.validaLongitud(txtMatricula, 10, evt);
    }//GEN-LAST:event_txtMatriculaKeyTyped

    private void txtMatriculaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMatriculaFocusLost
        Valida.convertirAMayusculas(txtMatricula);
    }//GEN-LAST:event_txtMatriculaFocusLost

    private void txtMatriculaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatriculaKeyPressed
        Validaciones.enter(this, evt, comboLicenciatura);
    }//GEN-LAST:event_txtMatriculaKeyPressed

    private void comboLicenciaturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboLicenciaturaKeyPressed
        Validaciones.enter(this, evt, comboPlanEstudios);
    }//GEN-LAST:event_comboLicenciaturaKeyPressed

    private void comboPlanEstudiosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboPlanEstudiosKeyPressed
        Validaciones.enter(this, evt, txtNombres);
    }//GEN-LAST:event_comboPlanEstudiosKeyPressed

    private void txtNombresKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresKeyPressed
        Validaciones.enter(this, evt, txtHoras);
    }//GEN-LAST:event_txtNombresKeyPressed

    private void labelnombre3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_labelnombre3FocusLost
        Valida.convertirAMayusculas(txtNombres);
    }//GEN-LAST:event_labelnombre3FocusLost

    private void txtHorasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHorasKeyTyped
        Validaciones.validaFlotantes(evt);
    }//GEN-LAST:event_txtHorasKeyTyped

    private void txtHorasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHorasKeyPressed
        Validaciones.enter(this, evt, txtCreditos);
    }//GEN-LAST:event_txtHorasKeyPressed

    private void txtCreditosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCreditosKeyTyped
        Validaciones.validaEntero(evt);
    }//GEN-LAST:event_txtCreditosKeyTyped

    private void txtCreditosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCreditosKeyPressed
        Validaciones.enter(this, evt, comboSemestre);
    }//GEN-LAST:event_txtCreditosKeyPressed

    private void comboSemestreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboSemestreKeyPressed
        Validaciones.enter(this, evt, comboNucleo);
    }//GEN-LAST:event_comboSemestreKeyPressed

    private void comboNucleoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboNucleoKeyPressed
        Validaciones.enter(this, evt, comboTipo);
    }//GEN-LAST:event_comboNucleoKeyPressed

    private void txtIdBusquedaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdBusquedaFocusLost
        Valida.convertirAMayusculas(txtNombreArchivo1);
    }//GEN-LAST:event_txtIdBusquedaFocusLost

    private void comboLicBusquedaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboLicBusquedaItemStateChanged
        actualizarTabla(3);
        comboSemestreBusqueda.setSelectedIndex(0);
        comboPlanBusqueda.setSelectedIndex(0);
        llenaComboPlanesFiltro();
    }//GEN-LAST:event_comboLicBusquedaItemStateChanged

    private void comboSemestreBusquedaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboSemestreBusquedaItemStateChanged
        actualizarTabla(4);
        comboPlanBusqueda.setSelectedIndex(0);
    }//GEN-LAST:event_comboSemestreBusquedaItemStateChanged

    private void comboPlanBusquedaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboPlanBusquedaItemStateChanged
        if (comboPlanBusqueda.getSelectedIndex() == 0)
        {
            actualizarTabla(4);
        } else
        {
            actualizarTabla(5);
        }
    }//GEN-LAST:event_comboPlanBusquedaItemStateChanged

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if (txtIdBusqueda.getText().equals("") && btnBuscar.getText().equals("Buscar"))
        {
            actualizarTabla(1);
        } else
        {
            actualizarTabla(2);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtNombresFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombresFocusLost
        Valida.convertirAMayusculas(txtNombres);
    }//GEN-LAST:event_txtNombresFocusLost

    public void actualizarTabla(int valor) {
        modelo = (DefaultTableModel) tablaMaterias.getModel();
        planes1 = plans;
        materia = materias;
        switch (valor)
        {
            case 1:
                if (materia.isEmpty())
                {
                    Mensaje.error(this, "No hay materias registradas");
                } else
                {
                    modelo.setRowCount(0);
                    for (Object m : materia)
                    {
                        Materia mat = (Materia) m;
                        modelo.addRow(new Object[]
                        {
                            mat.getClaveMateria(), mat.getUnidadAprendizaje(), buscaLic(mat.getClaveCarrera(), null), buscaPlan(mat.getPlanEstudios(), null), mat.getHoras(), mat.getCreditos(), mat.getNumeroPeriodo(), mat.getNucleo(), mat.getTipo()
                        });
                        btnBuscar.setText("Buscar");
                    }
                }
                break;
            case 2:
                materias = ConsultasObjetos.consultaMuchos("materia", "unidad_aprendizaje", txtIdBusqueda.getText(), null, null, "unidad_aprendizaje", ConectarBase.conectado());
                if (materias.isEmpty())
                {
                    Mensaje.error(this, "No hay materias registradas");
                } else
                {
                    modelo.setRowCount(0);
                    for (Object m : materias)
                    {
                        Materia mat = (Materia) m;
                        modelo.addRow(new Object[]
                        {
                            mat.getClaveMateria(), mat.getUnidadAprendizaje(), buscaLic(mat.getClaveCarrera(), null), buscaPlan(mat.getPlanEstudios(), null), mat.getHoras(), mat.getCreditos(), mat.getNumeroPeriodo(), mat.getNucleo(), mat.getTipo()

                        });
                        txtIdBusqueda.setText("");
                        btnBuscar.setText("Todas");
                    }
                }
                break;
            case 3:
                if (comboLicBusqueda.getSelectedIndex() == 0)
                {
                    actualizarTabla(1);
                } else
                {
                    modelo.setRowCount(0);
                    for (Object m : materias)
                    {
                        Materia mat = (Materia) m;
                        if (mat.getClaveCarrera().equals(buscaLic(null, comboLicBusqueda.getSelectedItem().toString())))
                        {
                            modelo.addRow(new Object[]
                            {
                                mat.getClaveMateria(), mat.getUnidadAprendizaje(), buscaLic(mat.getClaveCarrera(), null), buscaPlan(mat.getPlanEstudios(), null), mat.getHoras(), mat.getCreditos(), mat.getNumeroPeriodo(), mat.getNucleo(), mat.getTipo()

                            });
                        }
                    }
                    txtIdBusqueda.setText("");
                    btnBuscar.setText("Todas");
                }
                break;
            case 4:
                if (comboSemestreBusqueda.getSelectedIndex() == 0)
                {
                    actualizarTabla(3);
                } else
                {
                    //materias = ConsultasObjetos.consultaMuchos("materia", "id_licenciatura", buscaLic(null, jCLicenciaturaFiltro.getSelectedItem().toString()), "numero_periodo", jcSesmtre.getSelectedItem().toString(), "unidad_aprendizaje", ConectarBase.conectado());
                    if (materia.isEmpty())
                    {
                        Mensaje.error(this, "No hay materias registradas con este semestre");
                    } else
                    {
                        modelo.setRowCount(0);
                        for (Object m : materia)
                        {
                            Materia mat = (Materia) m;
                            if (mat.getClaveCarrera().equals(buscaLic(null, comboLicBusqueda.getSelectedItem().toString())) && mat.getNumeroPeriodo() == Integer.parseInt(comboSemestreBusqueda.getSelectedItem().toString()))
                            {
                                modelo.addRow(new Object[]
                                {
                                    mat.getClaveMateria(), mat.getUnidadAprendizaje(), buscaLic(mat.getClaveCarrera(), null), buscaPlan(mat.getPlanEstudios(), null), mat.getHoras(), mat.getCreditos(), mat.getNumeroPeriodo(), mat.getNucleo(), mat.getTipo()
                                });
                            }
                            txtIdBusqueda.setText("");
                            btnBuscar.setText("Todas");
                        }
                    }
                }
                break;
            case 5:
                if (comboSemestreBusqueda.getSelectedIndex() == 0)
                {
                    actualizarTabla(3);
                } else
                {
                    //materias = ConsultasObjetos.consultaMuchasMaterias("materia", "id_licenciatura", buscaLic(null, jCLicenciaturaFiltro.getSelectedItem().toString()), "numero_periodo", jcSesmtre.getSelectedItem().toString(), "id_plan_estudios", buscaPlan(null, JCPlanFiltro.getSelectedItem().toString()), "unidad_aprendizaje", ConectarBase.conectado());
                    if (materia.isEmpty())
                    {
                        Mensaje.error(this, "No hay materias registradas con este semestre");
                    } else
                    {
                        modelo.setRowCount(0);
                        for (Object m : materia)
                        {
                            Materia mat = (Materia) m;
                            if (mat.getClaveCarrera().equals(buscaLic(null, comboLicBusqueda.getSelectedItem().toString())) && mat.getNumeroPeriodo() == Integer.parseInt(comboSemestreBusqueda.getSelectedItem().toString()) && mat.getPlanEstudios().equals(buscaPlan(null, comboPlanBusqueda.getSelectedItem().toString())))
                            {
                                modelo.addRow(new Object[]
                                {
                                    mat.getClaveMateria(), mat.getUnidadAprendizaje(), buscaLic(mat.getClaveCarrera(), null), buscaPlan(mat.getPlanEstudios(), null), mat.getHoras(), mat.getCreditos(), mat.getNumeroPeriodo(), mat.getNucleo(), mat.getTipo()
                                });
                            }
                            txtIdBusqueda.setText("");
                            btnBuscar.setText("Todas");
                        }
                    }
                }
                break;
            default:
                break;
        }
    }

    private void edicion() {
        if (edicion)
        {
            edicion = false;
        } else
        {
            edicion = true;
        }
    }

    public void llenaComboLic() {
        comboLicenciatura.removeAllItems();
        comboLicBusqueda.removeAllItems();
        comboLicBusqueda.addItem("TODAS");
        for (int i = 0; i < lics.size(); i++)
        {
            comboLicenciatura.addItem(((Licenciatura) lics.get(i)).getLicenciatura());
            comboLicBusqueda.addItem(((Licenciatura) lics.get(i)).getLicenciatura());
        }
    }

    private void cancelar() {
        edicion();
        CtrlInterfaz.limpia(txtMatricula, txtNombres, txtHoras, txtCreditos);
        CtrlInterfaz.habilita(false, txtMatricula, comboLicenciatura, comboPlanEstudios, txtNombres, txtHoras,
                txtCreditos, comboSemestre, comboNucleo, comboTipo, btnCancelar);
        CtrlInterfaz.habilita(true, btnModificar, btnNuevo, btnEliminar, btnExportar1);
        btnNuevo.setText("Nuevo");
        btnModificar.setText("Modificar");
    }

    public void llenaComboPlanes() {
        comboPlanEstudios.removeAllItems();
        for (int i = 0; i < plans.size(); i++)
        {
            if (((PlanEstudios) plans.get(i)).getClaveCarrera().equals(buscaLic(null, comboLicenciatura.getSelectedItem().toString())))
            {
                comboPlanEstudios.addItem(((PlanEstudios) plans.get(i)).getPlanEstudios());
            }
        }
    }

    public void llenaComboPlanesFiltro() {
        comboPlanBusqueda.removeAllItems();
        comboPlanBusqueda.addItem("Todos");
        for (int i = 0; i < planes1.size(); i++)
        {
            if (((PlanEstudios) planes1.get(i)).getClaveCarrera().equals(buscaLic(null, comboLicBusqueda.getSelectedItem().toString())))
            {
                comboPlanBusqueda.addItem(((PlanEstudios) planes1.get(i)).getPlanEstudios());
            }
        }
    }

    public String buscaLic(String id, String licenciatura) {
        if (licenciatura != null)
        {
            for (Object l : lics)
            {
                Licenciatura lic = (Licenciatura) l;
                if ((lic.getLicenciatura()).equals(licenciatura))
                {
                    return lic.getIdLicenciatura();
                }
            }
        } else
        {
            for (Object l : lics)
            {
                Licenciatura lic = (Licenciatura) l;
                if (lic.getIdLicenciatura().equals(id))
                {
                    return lic.getLicenciatura();
                }
            }
        }
        return null;
    }

    private String buscaPlan(String id, String plan) {
        if (plan != null)
        {
            for (Object p : plans)
            {
                PlanEstudios pla = (PlanEstudios) p;
                if ((pla.getPlanEstudios().equals(plan)))
                {
                    return pla.getIdPlan();
                }
            }
        } else
        {
            for (Object p : plans)
            {
                PlanEstudios pla = (PlanEstudios) p;
                if (pla.getIdPlan().equals(id))
                {
                    return pla.getPlanEstudios();
                }
            }
        }
        return null;
    }

    public int buscarCombo(String text) {
        for (int i = 0; i < comboLicenciatura.getItemCount(); i++)
        {
            if (text.equals(comboLicenciatura.getItemAt(i)))
            {
                return i;
            }
        }
        return 0;
    }

    private int buscarComboPlan(String text) {
        for (int i = 0; i < comboPlanEstudios.getItemCount(); i++)
        {
            if (text.equals(comboPlanEstudios.getItemAt(i)))
            {
                return i;
            }
        }
        return 0;
    }

    private int buscarCombo(String text, JComboBox<String> jCSemestre) {
        for (int i = 0; i < jCSemestre.getItemCount(); i++)
        {
            if (text.equals(jCSemestre.getItemAt(i)))
            {
                return i;
            }
        }
        return 0;
    }

    private void importarBD() {
        lics = ConsultasObjetos.consultaMuchos("licenciatura", null, null, null, null, "nombre", ConectarBase.conectado());
        plans = ConsultasObjetos.consultaMuchos("plan_estudios", null, null, null, null, "plan_estudios", ConectarBase.conectado());
        materias = ConsultasObjetos.consultaMuchos("materia", null, null, null, null, "unidad_aprendizaje", ConectarBase.conectado());
        ConectarBase.desconectaBD();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(VtnMaterias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(VtnMaterias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(VtnMaterias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(VtnMaterias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VtnMaterias().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnExportar1;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JComboBox<String> comboLicBusqueda;
    private javax.swing.JComboBox<String> comboLicenciatura;
    private javax.swing.JComboBox<String> comboNucleo;
    private javax.swing.JComboBox<String> comboPlanBusqueda;
    private javax.swing.JComboBox<String> comboPlanEstudios;
    private javax.swing.JComboBox<String> comboSemestre;
    private javax.swing.JComboBox<String> comboSemestreBusqueda;
    private javax.swing.JComboBox<String> comboTipo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelnombre;
    private javax.swing.JLabel labelnombre1;
    private javax.swing.JLabel labelnombre10;
    private javax.swing.JLabel labelnombre11;
    private javax.swing.JLabel labelnombre12;
    private javax.swing.JLabel labelnombre2;
    private javax.swing.JLabel labelnombre3;
    private javax.swing.JLabel labelnombre4;
    private javax.swing.JLabel labelnombre5;
    private javax.swing.JLabel labelnombre6;
    private javax.swing.JLabel labelnombre7;
    private javax.swing.JLabel labelnombre8;
    private javax.swing.JLabel labelnombre9;
    private javax.swing.JPanel panelBusqeuda;
    private javax.swing.JPanel panelCaptura;
    private javax.swing.JPanel panelConsulta1;
    private javax.swing.JPanel panelEXportacion;
    private javax.swing.JPanel panelFiltros;
    private javax.swing.JPanel panelTabla;
    private javax.swing.JTable tablaMaterias;
    private javax.swing.JTextField txtCreditos;
    private javax.swing.JTextField txtHoras;
    private javax.swing.JTextField txtIdBusqueda;
    private javax.swing.JTextField txtMatricula;
    private javax.swing.JTextField txtNombreArchivo1;
    private javax.swing.JTextField txtNombres;
    // End of variables declaration//GEN-END:variables
}
