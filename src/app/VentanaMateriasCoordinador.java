/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import Clases.Archivo;
import Clases.ConectarBase;
import Clases.ConsultasObjetos;
import Clases.Valida;
import Objetos.Licenciatura;
import Objetos.Materia;
import Objetos.PlanEstudios;
import cjb.ci.CtrlInterfaz;
import cjb.ci.Mensaje;
import cjb.ci.Validaciones;
import static cjb.ci.Validaciones.enter;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class VentanaMateriasCoordinador extends javax.swing.JFrame {
    
    int id = 0;
    private Boolean edicion = true;
    private DefaultTableModel modelo;
    private ArrayList<Object> plans = new ArrayList<>();
    private ArrayList<Object> planes1 = new ArrayList<>();
    private ArrayList<Object> lics = new ArrayList<>();
    VentanaLogin vtn = new VentanaLogin();
    ArrayList materias = new ArrayList();

    /**
     * Creates new form VentanaPrinicipal
     */
    public VentanaMateriasCoordinador() {
        initComponents();
        //this.setResizable(false);
        this.getContentPane().setBackground(Color.white);
        this.setIconImage(new ImageIcon(getClass().getResource("/Iconos/SCHR.png")).getImage());
        tablaMaterias.getColumnModel().getColumn(0).setPreferredWidth(10);
        tablaMaterias.getColumnModel().getColumn(1).setPreferredWidth(200);
        tablaMaterias.getColumnModel().getColumn(2).setPreferredWidth(100);
        tablaMaterias.getColumnModel().getColumn(3).setPreferredWidth(20);
        tablaMaterias.getColumnModel().getColumn(4).setPreferredWidth(3);
        tablaMaterias.getColumnModel().getColumn(5).setPreferredWidth(3);
        tablaMaterias.getColumnModel().getColumn(6).setPreferredWidth(10);
        tablaMaterias.getColumnModel().getColumn(7).setPreferredWidth(20);
        tablaMaterias.getColumnModel().getColumn(8).setPreferredWidth(20);
        tablaMaterias.getColumnModel().getColumn(0).setResizable(false);
        tablaMaterias.getColumnModel().getColumn(1).setResizable(false);
        tablaMaterias.getColumnModel().getColumn(2).setResizable(false);
        tablaMaterias.getColumnModel().getColumn(3).setResizable(false);
        tablaMaterias.getColumnModel().getColumn(4).setResizable(false);
        tablaMaterias.getColumnModel().getColumn(5).setResizable(false);
        tablaMaterias.getColumnModel().getColumn(6).setResizable(false);
        tablaMaterias.getColumnModel().getColumn(7).setResizable(false);
        tablaMaterias.getColumnModel().getColumn(8).setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMaterias = new javax.swing.JTable();
        jBRegresar = new javax.swing.JButton();
        jBCerrarSesion = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txtHoras = new javax.swing.JTextField();
        txtCreditos = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtMatricula = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        comboPlanEstudios = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        comboNucleo = new javax.swing.JComboBox<>();
        comboSemestre = new javax.swing.JComboBox<>();
        comboTipo = new javax.swing.JComboBox<>();
        btnExportar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtIdBusqeuda = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        comboSemestreBusqueda = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        comboPlanBusqueda = new javax.swing.JComboBox<>();
        txtNombreArchivo = new javax.swing.JTextField();
        jLTituloUniversidad1 = new javax.swing.JLabel();
        jLTituloUAPT1 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Horarios UAPT");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tablaMaterias.setBackground(new java.awt.Color(25, 83, 0));
        tablaMaterias.setForeground(new java.awt.Color(254, 254, 254));
        tablaMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Matricula", "Nombre", "Licenciatura", "Plan", "Horas", "Creditos", "Periodo", "Nucleo", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaMaterias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMateriasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaMaterias);

        jBRegresar.setBackground(new java.awt.Color(102, 102, 0));
        jBRegresar.setForeground(new java.awt.Color(255, 255, 255));
        jBRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/flecha(2).png"))); // NOI18N
        jBRegresar.setText("Regresar");
        jBRegresar.setToolTipText("");
        jBRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRegresarActionPerformed(evt);
            }
        });

        jBCerrarSesion.setBackground(new java.awt.Color(102, 102, 0));
        jBCerrarSesion.setForeground(new java.awt.Color(255, 255, 255));
        jBCerrarSesion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/flecha(3).png"))); // NOI18N
        jBCerrarSesion.setText("Salir");
        jBCerrarSesion.setToolTipText("");
        jBCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCerrarSesionActionPerformed(evt);
            }
        });

        btnModificar.setBackground(new java.awt.Color(102, 102, 0));
        btnModificar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(102, 102, 0));
        btnEliminar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnNuevo.setBackground(new java.awt.Color(102, 102, 0));
        btnNuevo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnNuevo.setForeground(new java.awt.Color(255, 255, 255));
        btnNuevo.setText("Aceptar");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(102, 102, 0));
        btnCancelar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(25, 83, 0));

        txtHoras.setBackground(new java.awt.Color(254, 254, 254));
        txtHoras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHorasActionPerformed(evt);
            }
        });
        txtHoras.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHorasKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHorasKeyPressed(evt);
            }
        });

        txtCreditos.setBackground(new java.awt.Color(254, 254, 254));
        txtCreditos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCreditosKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCreditosKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(254, 254, 254));
        jLabel6.setText("Nombre");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(254, 254, 254));
        jLabel7.setText("Horas");

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(254, 254, 254));
        jLabel9.setText("Creditos");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(254, 254, 254));
        jLabel4.setText("Matricula");

        txtMatricula.setBackground(new java.awt.Color(254, 254, 254));
        txtMatricula.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMatriculaFocusLost(evt);
            }
        });
        txtMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMatriculaActionPerformed(evt);
            }
        });
        txtMatricula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMatriculaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMatriculaKeyTyped(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(254, 254, 254));
        jLabel10.setText("Numero periodo");

        txtNombre.setBackground(new java.awt.Color(254, 254, 254));
        txtNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreFocusLost(evt);
            }
        });
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreKeyPressed(evt);
            }
        });

        comboPlanEstudios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboPlanEstudiosKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(254, 254, 254));
        jLabel8.setText("Plan de estudios");

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(254, 254, 254));
        jLabel11.setText("Nucleo");

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(254, 254, 254));
        jLabel12.setText("Tipo");

        comboNucleo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BASICO", "SUSTANTIVO", "INTEGRAL" }));
        comboNucleo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboNucleoKeyPressed(evt);
            }
        });

        comboSemestre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        comboSemestre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboSemestreKeyPressed(evt);
            }
        });

        comboTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "OBLIGATORIA", "OPTATIVA" }));
        comboTipo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboTipoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(comboTipo, 0, 220, Short.MAX_VALUE)
                    .addComponent(comboSemestre, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboNucleo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11)
                    .addComponent(jLabel8)
                    .addComponent(comboPlanEstudios, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtHoras)
                    .addComponent(jLabel6)
                    .addComponent(txtCreditos)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(txtNombre)
                    .addComponent(jLabel10)
                    .addComponent(txtMatricula)
                    .addComponent(jLabel4))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboPlanEstudios, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtHoras, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCreditos, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboSemestre, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboNucleo, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnExportar.setBackground(new java.awt.Color(102, 102, 0));
        btnExportar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnExportar.setForeground(new java.awt.Color(255, 255, 255));
        btnExportar.setText("Exportar");
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });

        btnBuscar.setBackground(new java.awt.Color(102, 102, 0));
        btnBuscar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(25, 83, 0));

        txtIdBusqeuda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIdBusqeudaFocusLost(evt);
            }
        });
        txtIdBusqeuda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdBusqeudaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdBusqeudaKeyTyped(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(254, 254, 254));
        jLabel13.setText("INSERTE NOMBRE PARA BUSCAR");

        jLabel15.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(254, 254, 254));
        jLabel15.setText("SEMESTRE");

        comboSemestreBusqueda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TODOS", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        comboSemestreBusqueda.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboSemestreBusquedaItemStateChanged(evt);
            }
        });
        comboSemestreBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSemestreBusquedaActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(254, 254, 254));
        jLabel18.setText("PLAN");

        comboPlanBusqueda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TODOS", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        comboPlanBusqueda.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboPlanBusquedaItemStateChanged(evt);
            }
        });
        comboPlanBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPlanBusquedaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel15)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(comboSemestreBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel18)
                        .addGap(18, 18, 18)
                        .addComponent(comboPlanBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtIdBusqeuda))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtIdBusqeuda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18)
                        .addComponent(comboPlanBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboSemestreBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel15)))
        );

        txtNombreArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreArchivoActionPerformed(evt);
            }
        });

        jLTituloUniversidad1.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLTituloUniversidad1.setText("UNIVERSIDAD AUTONOMA DEL ESTADO DE MEXICO");

        jLTituloUAPT1.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLTituloUAPT1.setText("UNIDAD ACADEMICA PROFESIONAL TIANGUISTENCO");

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/UAEMex.jpg"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("ESCRIBA UN NOMBRE DE ARCHIVO PARA EXPORTAR");

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(1, 1, 1));
        jLabel17.setText("GESTION DE MATERIAS");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addComponent(jLabel16))
                            .addComponent(jLTituloUAPT1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLTituloUniversidad1)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(157, 157, 157)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(txtNombreArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnExportar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(260, 260, 260)
                                .addComponent(jLabel17)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBRegresar)
                        .addGap(18, 18, 18)
                        .addComponent(jBCerrarSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLTituloUniversidad1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLTituloUAPT1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombreArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnExportar)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBuscar)
                                .addGap(24, 24, 24))
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBCerrarSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMatriculaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMatriculaActionPerformed

    private void jBRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRegresarActionPerformed
        this.setVisible(false);
        new VentanaMenuCoordinador().setVisible(true);
    }//GEN-LAST:event_jBRegresarActionPerformed

    private void jBCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCerrarSesionActionPerformed
        this.setVisible(false);
        new VentanaLogin().setVisible(true);
    }//GEN-LAST:event_jBCerrarSesionActionPerformed

    private void txtHorasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHorasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHorasActionPerformed

    private void txtNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreFocusLost
        Valida.convertirAMayusculas(txtNombre);
    }//GEN-LAST:event_txtNombreFocusLost

    private void txtMatriculaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMatriculaFocusLost
        Valida.convertirAMayusculas(txtMatricula);
    }//GEN-LAST:event_txtMatriculaFocusLost

    private void txtHorasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHorasKeyTyped
        cjb.ci.Validaciones.validaFlotantes(evt);
    }//GEN-LAST:event_txtHorasKeyTyped

    private void txtCreditosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCreditosKeyTyped
        cjb.ci.Validaciones.validaEntero(evt);
    }//GEN-LAST:event_txtCreditosKeyTyped

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if (txtMatricula.getText().compareTo("") == 0)
        {
            Mensaje.error(this, "NO HA SELECCIONADO NINGUN REGISTRO");
        } else
        {
            if (!edicion)
            {
                edicion();
                btnModificar.setText("Aceptar");
                CtrlInterfaz.habilita(true, comboPlanEstudios, txtNombre, txtHoras, txtCreditos, comboSemestre, comboNucleo, comboTipo, btnCancelar);
                CtrlInterfaz.habilita(false, btnNuevo, btnEliminar, btnExportar);
                
            } else
            {
                Materia materia = new Materia(txtMatricula.getText(), txtNombre.getText(), Integer.parseInt(txtHoras.getText()), Integer.parseInt(txtCreditos.getText()), Integer.parseInt(comboSemestre.getSelectedItem().toString()), comboNucleo.getSelectedItem().toString(), comboTipo.getSelectedItem().toString(), vtn.lic, buscaPlan(null, comboPlanEstudios.getSelectedItem().toString()));
                Mensaje.exito(this, "Espere por favor haciendo modificacion en base de datos");
                String mensaje = Controlador.ControladorMaterias.modifcaMateria(materia, (String) tablaMaterias.getValueAt(tablaMaterias.getSelectedRow(), 0));
                if (mensaje.equals("operacion exitosa"))
                {
                    btnModificar.setText("Modificar");
                    CtrlInterfaz.habilita(false, txtMatricula, comboPlanEstudios, txtNombre, txtHoras, txtCreditos, comboSemestre, comboNucleo, comboTipo, btnCancelar);
                    CtrlInterfaz.habilita(true, btnNuevo, btnEliminar, btnExportar);
                    CtrlInterfaz.limpia(txtMatricula, txtCreditos, txtHoras, txtNombre);
                    importarBD();
                    actualizarTabla(1);
                    comboSemestreBusqueda.setSelectedItem(0);
                    edicion();
                } else
                {
                    JOptionPane.showMessageDialog(rootPane, mensaje);
                }
            }
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (Mensaje.pregunta(this, "¿En realidad quiere eliminar el periodo " + txtMatricula.getText() + "?") == 0)
        {
            Mensaje.exito(this, "Espere por favor eliminando registro de la base de datos");
            String mensaje = Controlador.ControladorMaterias.eliminaMateria(txtMatricula.getText());
            if (mensaje.endsWith("operacion exitosa"))
            {
                importarBD();
                actualizarTabla(1);
                comboSemestreBusqueda.setSelectedItem(0);
            } else
            {
                JOptionPane.showMessageDialog(rootPane, mensaje);
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        if (!edicion)
        {
            edicion();
            btnNuevo.setText("Aceptar");
            CtrlInterfaz.limpia(txtMatricula, txtNombre, txtHoras, txtCreditos);
            CtrlInterfaz.habilita(true, txtMatricula, comboPlanEstudios, txtNombre, txtHoras, txtCreditos, comboSemestre, comboNucleo, comboTipo, btnCancelar);
            CtrlInterfaz.habilita(false, btnModificar, btnEliminar, btnExportar);
            CtrlInterfaz.selecciona(txtMatricula);
        } else
        {
            Materia mat = new Materia(txtMatricula.getText(), txtNombre.getText(), Integer.parseInt(txtHoras.getText()), Integer.parseInt(txtCreditos.getText()), Integer.parseInt(comboSemestre.getSelectedItem().toString()), comboNucleo.getSelectedItem().toString(), comboTipo.getSelectedItem().toString(), vtn.lic, buscaPlan(null, comboPlanEstudios.getSelectedItem().toString()));
            Mensaje.exito(this, "Espere por favor haciendo inserccion en base de datos");
            String mensaje = Controlador.ControladorMaterias.insertaMateria(mat);
            if (mensaje.equals("operacion exitosa"))
            {
                btnNuevo.setText("Nuevo");
                CtrlInterfaz.habilita(false, txtMatricula, comboPlanEstudios, txtNombre, txtHoras, txtCreditos, comboSemestre, comboNucleo, comboTipo, btnCancelar);
                CtrlInterfaz.habilita(true, btnModificar, btnEliminar, btnExportar);
                CtrlInterfaz.limpia(txtMatricula, txtCreditos, txtHoras, txtNombre);
                importarBD();
                actualizarTabla(1);
                comboSemestreBusqueda.setSelectedItem(0);
                edicion();
            } else
            {
                JOptionPane.showMessageDialog(rootPane, mensaje);
            }
        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed
        if (txtNombreArchivo.getText() != null)
        {
            String mensaje = Archivo.Exportar(tablaMaterias, txtNombreArchivo.getText());
            if (mensaje.equals("Error en la Exportacion"))
            {
                Mensaje.error(this, mensaje);
            } else
            {
                Mensaje.exito(this, mensaje);
            }
        } else
        {
            Mensaje.error(this, "Escriba el nombre del archivo");
        }
    }//GEN-LAST:event_btnExportarActionPerformed

    private void txtMatriculaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatriculaKeyPressed
        Validaciones.enter(this, evt, comboPlanEstudios);
    }//GEN-LAST:event_txtMatriculaKeyPressed

    private void comboPlanEstudiosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboPlanEstudiosKeyPressed
        Validaciones.enter(this, evt, txtNombre);
    }//GEN-LAST:event_comboPlanEstudiosKeyPressed

    private void txtNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyPressed
        Validaciones.enter(this, evt, txtHoras);
    }//GEN-LAST:event_txtNombreKeyPressed

    private void txtHorasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHorasKeyPressed
        Validaciones.enter(this, evt, txtCreditos);
    }//GEN-LAST:event_txtHorasKeyPressed

    private void txtCreditosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCreditosKeyPressed
        Validaciones.enter(this, evt, comboSemestre);
    }//GEN-LAST:event_txtCreditosKeyPressed

    private void comboNucleoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboNucleoKeyPressed
        Validaciones.enter(this, evt, comboTipo);
    }//GEN-LAST:event_comboNucleoKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        cancelar();
        importarBD();
        actualizarTabla(1);
        llenaComboPlanes();
        llenaComboPlanesFiltro();
    }//GEN-LAST:event_formWindowOpened

    private void comboSemestreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboSemestreKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboSemestreKeyPressed

    private void comboTipoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboTipoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboTipoKeyPressed

    private void tablaMateriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMateriasMouseClicked
        txtMatricula.setText((String) modelo.getValueAt(tablaMaterias.getSelectedRow(), 0));
        txtNombre.setText((String) modelo.getValueAt(tablaMaterias.getSelectedRow(), 1));
        comboPlanEstudios.setSelectedIndex((buscarCombo((String) modelo.getValueAt(tablaMaterias.getSelectedRow(), 3), comboPlanEstudios)));
        txtHoras.setText((String) modelo.getValueAt(tablaMaterias.getSelectedRow(), 4).toString());
        txtCreditos.setText((String) modelo.getValueAt(tablaMaterias.getSelectedRow(), 5).toString());
        comboSemestre.setSelectedIndex(buscarCombo((String) modelo.getValueAt(tablaMaterias.getSelectedRow(), 6).toString(), comboSemestre));
        comboNucleo.setSelectedIndex(buscarCombo((String) modelo.getValueAt(tablaMaterias.getSelectedRow(), 7), comboNucleo));
        comboTipo.setSelectedIndex(buscarCombo((String) modelo.getValueAt(tablaMaterias.getSelectedRow(), 8), comboTipo));
    }//GEN-LAST:event_tablaMateriasMouseClicked

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if (txtIdBusqeuda.getText().equals("") && btnBuscar.getText().equals("Buscar"))
        {
            actualizarTabla(1);
        } else
        {
            actualizarTabla(2);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtIdBusqeudaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdBusqeudaFocusLost
        Valida.convertirAMayusculas(txtIdBusqeuda);
    }//GEN-LAST:event_txtIdBusqeudaFocusLost

    private void txtIdBusqeudaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdBusqeudaKeyPressed
        enter(this, evt, btnBuscar);
    }//GEN-LAST:event_txtIdBusqeudaKeyPressed

    private void comboSemestreBusquedaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboSemestreBusquedaItemStateChanged
        actualizarTabla(3);
        comboPlanBusqueda.setSelectedIndex(0);
    }//GEN-LAST:event_comboSemestreBusquedaItemStateChanged

    private void comboSemestreBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSemestreBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboSemestreBusquedaActionPerformed

    private void txtMatriculaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatriculaKeyTyped
        Validaciones.validaAlfanumerico(evt);
        Valida.validaLongitud(txtMatricula, 10, evt);
    }//GEN-LAST:event_txtMatriculaKeyTyped

    private void txtNombreArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreArchivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreArchivoActionPerformed

    private void comboPlanBusquedaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboPlanBusquedaItemStateChanged
        actualizarTabla(4);
    }//GEN-LAST:event_comboPlanBusquedaItemStateChanged

    private void comboPlanBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPlanBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboPlanBusquedaActionPerformed

    private void txtIdBusqeudaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdBusqeudaKeyTyped
        btnBuscar.setText("Buscar");
        comboSemestreBusqueda.setSelectedIndex(0);
        comboPlanBusqueda.setSelectedIndex(0);
    }//GEN-LAST:event_txtIdBusqeudaKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(VentanaMateriasCoordinador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(VentanaMateriasCoordinador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(VentanaMateriasCoordinador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(VentanaMateriasCoordinador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaMateriasCoordinador().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnExportar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<String> comboNucleo;
    private javax.swing.JComboBox<String> comboPlanBusqueda;
    private javax.swing.JComboBox<String> comboPlanEstudios;
    private javax.swing.JComboBox<String> comboSemestre;
    private javax.swing.JComboBox<String> comboSemestreBusqueda;
    private javax.swing.JComboBox<String> comboTipo;
    private javax.swing.JButton jBCerrarSesion;
    private javax.swing.JButton jBRegresar;
    private javax.swing.JLabel jLTituloUAPT1;
    private javax.swing.JLabel jLTituloUniversidad1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaMaterias;
    private javax.swing.JTextField txtCreditos;
    private javax.swing.JTextField txtHoras;
    private javax.swing.JTextField txtIdBusqeuda;
    private javax.swing.JTextField txtMatricula;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreArchivo;
    // End of variables declaration//GEN-END:variables

    public void actualizarTabla(int valor) {
        modelo = (DefaultTableModel) tablaMaterias.getModel();
        
        switch (valor)
        {
            case 1:
                if (materias.isEmpty())
                {
                    Mensaje.error(this, "No hay materias registradas");
                } else
                {
                    modelo.setRowCount(0);
                    for (Object m : materias)
                    {
                        Materia mat = (Materia) m;
                        modelo.addRow(new Object[]
                        {
                            mat.getClaveMateria(), mat.getUnidadAprendizaje(), buscaLic(mat.getClaveCarrera(), null), buscaPlan(mat.getPlanEstudios(), null), mat.getHoras(), mat.getCreditos(), mat.getNumeroPeriodo(), mat.getNucleo(), mat.getTipo()
                        });
                    }
                    btnBuscar.setText("Buscar");
                }
                break;
            case 2:
                materias = ConsultasObjetos.consultaMuchos("materia", "unidad_aprendizaje", txtIdBusqeuda.getText(), null, null, "unidad_aprendizaje", ConectarBase.conectado());
                if (materias.isEmpty())
                {
                    Mensaje.error(this, "No hay materias registradas");
                } else
                {
                    modelo.setRowCount(0);
                    for (Object m : materias)
                    {
                        Materia mat = (Materia) m;
                        if (mat.getClaveCarrera().equals(vtn.lic))
                        {
                            modelo.addRow(new Object[]
                            {
                                mat.getClaveMateria(), mat.getUnidadAprendizaje(), buscaLic(mat.getClaveCarrera(), null), buscaPlan(mat.getPlanEstudios(), null), mat.getHoras(), mat.getCreditos(), mat.getNumeroPeriodo(), mat.getNucleo(), mat.getTipo()
                            });
                        }
                    }
                    txtIdBusqeuda.setText("");
                    btnBuscar.setText("Todas");
                }
                break;
            case 3:
                if (comboSemestreBusqueda.getSelectedIndex() == 0)
                {
                    actualizarTabla(1);
                } else
                {
                    if (materias.isEmpty())
                    {
                        Mensaje.error(this, "No hay materias registradas con este semestre");
                        comboSemestreBusqueda.setSelectedIndex(0);
                    } else
                    {
                        modelo.setRowCount(0);
                        for (Object m : materias)
                        {
                            Materia mat = (Materia) m;
                            if (mat.getClaveCarrera().equals(vtn.lic) && mat.getNumeroPeriodo() == Integer.parseInt(comboSemestreBusqueda.getSelectedItem().toString()))
                            {
                                modelo.addRow(new Object[]
                                {
                                    mat.getClaveMateria(), mat.getUnidadAprendizaje(), buscaLic(mat.getClaveCarrera(), null), buscaPlan(mat.getPlanEstudios(), null), mat.getHoras(), mat.getCreditos(), mat.getNumeroPeriodo(), mat.getNucleo(), mat.getTipo()
                                });
                            }
                        }
                        btnBuscar.setText("Todas");
                    }
                }
                break;
            case 4:
                if (comboSemestreBusqueda.getSelectedIndex() == 0)
                {
                    actualizarTabla(3);
                } else
                {
                    if (materias.isEmpty())
                    {
                        Mensaje.error(this, "No hay materias registradas con este semestre");
                    } else
                    {
                        modelo.setRowCount(0);
                        for (Object m : materias)
                        {
                            Materia mat = (Materia) m;
                            if (mat.getClaveCarrera().equals(vtn.lic) && mat.getNumeroPeriodo() == Integer.parseInt(comboSemestreBusqueda.getSelectedItem().toString()) && mat.getPlanEstudios().equals(buscaPlan(null, comboPlanBusqueda.getSelectedItem().toString())))
                            {
                                modelo.addRow(new Object[]
                                {
                                    mat.getClaveMateria(), mat.getUnidadAprendizaje(), buscaLic(mat.getClaveCarrera(), null), buscaPlan(mat.getPlanEstudios(), null), mat.getHoras(), mat.getCreditos(), mat.getNumeroPeriodo(), mat.getNucleo(), mat.getTipo()
                                });
                            }
                            btnBuscar.setText("Todas");
                        }
                    }
                }
                break;
            default:
                break;
        }
    }
    
    private void edicion() {
        if (edicion)
        {
            edicion = false;
        } else
        {
            edicion = true;
        }
    }
    
    private void cancelar() {
        edicion();
        CtrlInterfaz.limpia(txtMatricula, txtNombre, txtHoras, txtCreditos);
        CtrlInterfaz.habilita(false, txtMatricula, comboPlanEstudios, txtNombre, txtHoras, txtCreditos, comboSemestre, comboNucleo, comboTipo, btnCancelar);
        CtrlInterfaz.habilita(true, btnModificar, btnNuevo, btnEliminar, btnExportar);
        btnNuevo.setText("Nuevo");
        btnModificar.setText("Modificar");
    }
    
    public void llenaComboPlanes() {
        comboPlanEstudios.removeAllItems();
        for (int i = 0; i < plans.size(); i++)
        {
            comboPlanEstudios.addItem(((PlanEstudios) plans.get(i)).getPlanEstudios());
        }
    }
    
    public String buscaLic(String id, String licenciatura) {
        if (licenciatura != null)
        {
            for (Object l : lics)
            {
                Licenciatura lic = (Licenciatura) l;
                if ((lic.getLicenciatura()).equals(licenciatura))
                {
                    return lic.getIdLicenciatura();
                }
            }
        } else
        {
            for (Object l : lics)
            {
                Licenciatura lic = (Licenciatura) l;
                if (lic.getIdLicenciatura().equals(id))
                {
                    return lic.getLicenciatura();
                }
            }
        }
        return null;
    }
    
    private String buscaPlan(String id, String plan) {
        if (plan != null)
        {
            for (Object p : plans)
            {
                PlanEstudios pla = (PlanEstudios) p;
                if ((pla.getPlanEstudios().equals(plan)))
                {
                    return pla.getIdPlan();
                }
            }
        } else
        {
            for (Object p : plans)
            {
                PlanEstudios pla = (PlanEstudios) p;
                if (pla.getIdPlan().equals(id))
                {
                    return pla.getPlanEstudios();
                }
            }
        }
        return null;
    }
    
    private int buscarComboPlan(String text) {
        for (int i = 0; i < comboPlanEstudios.getItemCount(); i++)
        {
            if (text.equals(comboPlanEstudios.getItemAt(i)))
            {
                return i;
            }
        }
        return 0;
    }
    
    private int buscarCombo(String text, JComboBox<String> jCSemestre) {
        for (int i = 0; i < jCSemestre.getItemCount(); i++)
        {
            if (text.equals(jCSemestre.getItemAt(i)))
            {
                return i;
            }
        }
        return 0;
    }
    
    public void llenaComboPlanesFiltro() {
        comboPlanBusqueda.removeAllItems();
        comboPlanBusqueda.addItem("Todos");
        planes1 = ConsultasObjetos.consultaMuchos("plan_estudios", "id_licenciatura", vtn.lic, null, null, "plan_estudios", ConectarBase.conectado());
        for (int i = 0; i < planes1.size(); i++)
        {
            comboPlanBusqueda.addItem(((PlanEstudios) planes1.get(i)).getPlanEstudios());
        }
    }
    
    private void importarBD() {
        lics = ConsultasObjetos.consultaMuchos("licenciatura", null, null, null, null, "nombre", ConectarBase.conectado());
        plans = ConsultasObjetos.consultaMuchos("plan_estudios", "id_licenciatura", vtn.lic, null, null, "plan_estudios", ConectarBase.conectado());
        materias = ConsultasObjetos.consultaMuchos("materia", "id_licenciatura", vtn.lic, null, null, "unidad_aprendizaje", ConectarBase.conectado());
        ConectarBase.desconectaBD();
    }
}
